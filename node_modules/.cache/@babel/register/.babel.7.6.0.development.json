{
  "{\"sourceRoot\":\"/Users/e653788/aztec-ganache-starter-kit/scripts\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/e653788/aztec-ganache-starter-kit\",\"filename\":\"/Users/e653788/aztec-ganache-starter-kit/scripts/run.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e653788/aztec-ganache-starter-kit\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/e653788/aztec-ganache-starter-kit",
      "filename": "/Users/e653788/aztec-ganache-starter-kit/scripts/run.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/e653788/aztec-ganache-starter-kit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e653788/aztec-ganache-starter-kit/scripts/run.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e653788/aztec-ganache-starter-kit/scripts/run.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts",
        "sourceFileName": "run.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _log = require(\"./utils/log\");\n\nfunction run(fn, options) {\n  var task = typeof fn[\"default\"] === 'undefined' ? fn : fn[\"default\"];\n  (0, _log.successLog)(\"Start Running '\".concat(task.name).concat(options.length ? \"(\".concat(options.join(', '), \")\") : '', \"'...\"));\n  var startTime = new Date();\n  return task.apply(void 0, (0, _toConsumableArray2[\"default\"])(options)).then(function () {\n    var now = new Date();\n    var diff = now.getTime() - startTime.getTime();\n    (0, _log.successLog)(\"Finished '\".concat(task.name, \"' in \").concat(diff, \" ms\"));\n  });\n}\n\nif (process.argv.length > 2) {\n  delete require.cache[__filename]; // eslint-disable-line no-underscore-dangle\n\n  var _module = require(\"./tasks/\".concat(process.argv[2], \".js\"))[\"default\"]; // eslint-disable-line\n\n\n  run(_module, process.argv.slice(3))[\"catch\"](function (err) {\n    return (0, _log.errorLog)(err.stack);\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bi5qcyJdLCJuYW1lcyI6WyJydW4iLCJmbiIsIm9wdGlvbnMiLCJ0YXNrIiwibmFtZSIsImxlbmd0aCIsImpvaW4iLCJzdGFydFRpbWUiLCJEYXRlIiwidGhlbiIsIm5vdyIsImRpZmYiLCJnZXRUaW1lIiwicHJvY2VzcyIsImFyZ3YiLCJyZXF1aXJlIiwiY2FjaGUiLCJfX2ZpbGVuYW1lIiwibW9kdWxlIiwic2xpY2UiLCJlcnIiLCJzdGFjayJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBS0EsU0FBU0EsR0FBVCxDQUFhQyxFQUFiLEVBQWlCQyxPQUFqQixFQUEwQjtBQUN4QixNQUFNQyxJQUFJLEdBQUksT0FBT0YsRUFBRSxXQUFULEtBQXNCLFdBQXZCLEdBQXNDQSxFQUF0QyxHQUEyQ0EsRUFBRSxXQUExRDtBQUNBLGdEQUE2QkUsSUFBSSxDQUFDQyxJQUFsQyxTQUF5Q0YsT0FBTyxDQUFDRyxNQUFSLGNBQXFCSCxPQUFPLENBQUNJLElBQVIsQ0FBYSxJQUFiLENBQXJCLFNBQTZDLEVBQXRGO0FBQ0EsTUFBTUMsU0FBUyxHQUFHLElBQUlDLElBQUosRUFBbEI7QUFFQSxTQUFPTCxJQUFJLE1BQUosNkNBQVFELE9BQVIsR0FBaUJPLElBQWpCLENBQXNCLFlBQU07QUFDakMsUUFBTUMsR0FBRyxHQUFHLElBQUlGLElBQUosRUFBWjtBQUNBLFFBQU1HLElBQUksR0FBR0QsR0FBRyxDQUFDRSxPQUFKLEtBQWdCTCxTQUFTLENBQUNLLE9BQVYsRUFBN0I7QUFDQSw2Q0FBd0JULElBQUksQ0FBQ0MsSUFBN0Isa0JBQXlDTyxJQUF6QztBQUNELEdBSk0sQ0FBUDtBQUtEOztBQUVELElBQUlFLE9BQU8sQ0FBQ0MsSUFBUixDQUFhVCxNQUFiLEdBQXNCLENBQTFCLEVBQTZCO0FBQzNCLFNBQU9VLE9BQU8sQ0FBQ0MsS0FBUixDQUFjQyxVQUFkLENBQVAsQ0FEMkIsQ0FDTzs7QUFDbEMsTUFBTUMsT0FBTSxHQUFHSCxPQUFPLG1CQUFZRixPQUFPLENBQUNDLElBQVIsQ0FBYSxDQUFiLENBQVosU0FBUCxXQUFmLENBRjJCLENBRXNDOzs7QUFDakVkLEVBQUFBLEdBQUcsQ0FBQ2tCLE9BQUQsRUFBU0wsT0FBTyxDQUFDQyxJQUFSLENBQWFLLEtBQWIsQ0FBbUIsQ0FBbkIsQ0FBVCxDQUFILFVBQXlDLFVBQUFDLEdBQUc7QUFBQSxXQUFJLG1CQUFTQSxHQUFHLENBQUNDLEtBQWIsQ0FBSjtBQUFBLEdBQTVDO0FBQ0QiLCJzb3VyY2VSb290IjoiL1VzZXJzL2U2NTM3ODgvYXp0ZWMtZ2FuYWNoZS1zdGFydGVyLWtpdC9zY3JpcHRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgc3VjY2Vzc0xvZyxcbiAgZXJyb3JMb2csXG59IGZyb20gJy4vdXRpbHMvbG9nJztcblxuZnVuY3Rpb24gcnVuKGZuLCBvcHRpb25zKSB7XG4gIGNvbnN0IHRhc2sgPSAodHlwZW9mIGZuLmRlZmF1bHQgPT09ICd1bmRlZmluZWQnKSA/IGZuIDogZm4uZGVmYXVsdDtcbiAgc3VjY2Vzc0xvZyhgU3RhcnQgUnVubmluZyAnJHt0YXNrLm5hbWV9JHtvcHRpb25zLmxlbmd0aCA/IGAoJHtvcHRpb25zLmpvaW4oJywgJyl9KWAgOiAnJ30nLi4uYCk7XG4gIGNvbnN0IHN0YXJ0VGltZSA9IG5ldyBEYXRlKCk7XG5cbiAgcmV0dXJuIHRhc2soLi4ub3B0aW9ucykudGhlbigoKSA9PiB7XG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICBjb25zdCBkaWZmID0gbm93LmdldFRpbWUoKSAtIHN0YXJ0VGltZS5nZXRUaW1lKCk7XG4gICAgc3VjY2Vzc0xvZyhgRmluaXNoZWQgJyR7dGFzay5uYW1lfScgaW4gJHtkaWZmfSBtc2ApO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuYXJndi5sZW5ndGggPiAyKSB7XG4gIGRlbGV0ZSByZXF1aXJlLmNhY2hlW19fZmlsZW5hbWVdOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVyc2NvcmUtZGFuZ2xlXG4gIGNvbnN0IG1vZHVsZSA9IHJlcXVpcmUoYC4vdGFza3MvJHtwcm9jZXNzLmFyZ3ZbMl19LmpzYCkuZGVmYXVsdDsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICBydW4obW9kdWxlLCBwcm9jZXNzLmFyZ3Yuc2xpY2UoMykpLmNhdGNoKGVyciA9PiBlcnJvckxvZyhlcnIuc3RhY2spKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "run.js"
      ],
      "names": [
        "run",
        "fn",
        "options",
        "task",
        "name",
        "length",
        "join",
        "startTime",
        "Date",
        "then",
        "now",
        "diff",
        "getTime",
        "process",
        "argv",
        "require",
        "cache",
        "__filename",
        "module",
        "slice",
        "err",
        "stack"
      ],
      "mappings": ";;;;;;AAAA;;AAKA,SAASA,GAAT,CAAaC,EAAb,EAAiBC,OAAjB,EAA0B;AACxB,MAAMC,IAAI,GAAI,OAAOF,EAAE,WAAT,KAAsB,WAAvB,GAAsCA,EAAtC,GAA2CA,EAAE,WAA1D;AACA,gDAA6BE,IAAI,CAACC,IAAlC,SAAyCF,OAAO,CAACG,MAAR,cAAqBH,OAAO,CAACI,IAAR,CAAa,IAAb,CAArB,SAA6C,EAAtF;AACA,MAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AAEA,SAAOL,IAAI,MAAJ,6CAAQD,OAAR,GAAiBO,IAAjB,CAAsB,YAAM;AACjC,QAAMC,GAAG,GAAG,IAAIF,IAAJ,EAAZ;AACA,QAAMG,IAAI,GAAGD,GAAG,CAACE,OAAJ,KAAgBL,SAAS,CAACK,OAAV,EAA7B;AACA,6CAAwBT,IAAI,CAACC,IAA7B,kBAAyCO,IAAzC;AACD,GAJM,CAAP;AAKD;;AAED,IAAIE,OAAO,CAACC,IAAR,CAAaT,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,SAAOU,OAAO,CAACC,KAAR,CAAcC,UAAd,CAAP,CAD2B,CACO;;AAClC,MAAMC,OAAM,GAAGH,OAAO,mBAAYF,OAAO,CAACC,IAAR,CAAa,CAAb,CAAZ,SAAP,WAAf,CAF2B,CAEsC;;;AACjEd,EAAAA,GAAG,CAACkB,OAAD,EAASL,OAAO,CAACC,IAAR,CAAaK,KAAb,CAAmB,CAAnB,CAAT,CAAH,UAAyC,UAAAC,GAAG;AAAA,WAAI,mBAASA,GAAG,CAACC,KAAb,CAAJ;AAAA,GAA5C;AACD",
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts",
      "sourcesContent": [
        "import {\n  successLog,\n  errorLog,\n} from './utils/log';\n\nfunction run(fn, options) {\n  const task = (typeof fn.default === 'undefined') ? fn : fn.default;\n  successLog(`Start Running '${task.name}${options.length ? `(${options.join(', ')})` : ''}'...`);\n  const startTime = new Date();\n\n  return task(...options).then(() => {\n    const now = new Date();\n    const diff = now.getTime() - startTime.getTime();\n    successLog(`Finished '${task.name}' in ${diff} ms`);\n  });\n}\n\nif (process.argv.length > 2) {\n  delete require.cache[__filename]; // eslint-disable-line no-underscore-dangle\n  const module = require(`./tasks/${process.argv[2]}.js`).default; // eslint-disable-line\n  run(module, process.argv.slice(3)).catch(err => errorLog(err.stack));\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567874443616
  },
  "{\"sourceRoot\":\"/Users/e653788/aztec-ganache-starter-kit/scripts/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/e653788/aztec-ganache-starter-kit\",\"filename\":\"/Users/e653788/aztec-ganache-starter-kit/scripts/utils/log.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e653788/aztec-ganache-starter-kit\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/e653788/aztec-ganache-starter-kit",
      "filename": "/Users/e653788/aztec-ganache-starter-kit/scripts/utils/log.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/e653788/aztec-ganache-starter-kit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e653788/aztec-ganache-starter-kit/scripts/utils/log.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e653788/aztec-ganache-starter-kit/scripts/utils/log.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts/utils",
        "sourceFileName": "log.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.successLog = successLog;\nexports.warnLog = warnLog;\nexports.errorLog = errorLog;\nexports.log = log;\nexports.logEntries = logEntries;\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\n/* eslint-disable no-console */\nfunction formatLog() {\n  var _console;\n\n  (_console = console).log.apply(_console, arguments);\n\n  console.log();\n}\n\nfunction successLog() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var message = args[0],\n      rest = args.slice(1);\n  formatLog.apply(void 0, [_chalk[\"default\"].green(message)].concat((0, _toConsumableArray2[\"default\"])(rest)));\n}\n\nfunction warnLog() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var message = args[0],\n      rest = args.slice(1);\n  formatLog.apply(void 0, [_chalk[\"default\"].yellow.bold(\" \".concat(message, \" \"))].concat((0, _toConsumableArray2[\"default\"])(rest)));\n}\n\nfunction errorLog() {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  var message = args[0],\n      rest = args.slice(1);\n  formatLog.apply(void 0, [_chalk[\"default\"].white.bgRed.bold(\" \".concat(message, \" \"))].concat((0, _toConsumableArray2[\"default\"])(rest)));\n}\n\nfunction log() {\n  formatLog.apply(void 0, arguments);\n}\n\nfunction logEntries(files) {\n  log(\"\\n\".concat(files.map(function (file) {\n    return \"  \".concat(file);\n  }).join('\\n')));\n}\n\nvar _default = log;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZy5qcyJdLCJuYW1lcyI6WyJmb3JtYXRMb2ciLCJjb25zb2xlIiwibG9nIiwic3VjY2Vzc0xvZyIsImFyZ3MiLCJtZXNzYWdlIiwicmVzdCIsImNoYWxrIiwiZ3JlZW4iLCJ3YXJuTG9nIiwieWVsbG93IiwiYm9sZCIsImVycm9yTG9nIiwid2hpdGUiLCJiZ1JlZCIsImxvZ0VudHJpZXMiLCJmaWxlcyIsIm1hcCIsImZpbGUiLCJqb2luIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7O0FBREE7QUFHQSxTQUFTQSxTQUFULEdBQStCO0FBQUE7O0FBQzdCLGNBQUFDLE9BQU8sRUFBQ0MsR0FBUjs7QUFDQUQsRUFBQUEsT0FBTyxDQUFDQyxHQUFSO0FBQ0Q7O0FBRU0sU0FBU0MsVUFBVCxHQUE2QjtBQUFBLG9DQUFOQyxJQUFNO0FBQU5BLElBQUFBLElBQU07QUFBQTs7QUFBQSxNQUMzQkMsT0FEMkIsR0FDUEQsSUFETztBQUFBLE1BQ2ZFLElBRGUsR0FDUEYsSUFETztBQUVsQ0osRUFBQUEsU0FBUyxNQUFULFVBQVVPLGtCQUFNQyxLQUFOLENBQVlILE9BQVosQ0FBViw2Q0FBbUNDLElBQW5DO0FBQ0Q7O0FBRU0sU0FBU0csT0FBVCxHQUEwQjtBQUFBLHFDQUFOTCxJQUFNO0FBQU5BLElBQUFBLElBQU07QUFBQTs7QUFBQSxNQUN4QkMsT0FEd0IsR0FDSkQsSUFESTtBQUFBLE1BQ1pFLElBRFksR0FDSkYsSUFESTtBQUUvQkosRUFBQUEsU0FBUyxNQUFULFVBQVVPLGtCQUFNRyxNQUFOLENBQWFDLElBQWIsWUFBc0JOLE9BQXRCLE9BQVYsNkNBQWdEQyxJQUFoRDtBQUNEOztBQUVNLFNBQVNNLFFBQVQsR0FBMkI7QUFBQSxxQ0FBTlIsSUFBTTtBQUFOQSxJQUFBQSxJQUFNO0FBQUE7O0FBQUEsTUFDekJDLE9BRHlCLEdBQ0xELElBREs7QUFBQSxNQUNiRSxJQURhLEdBQ0xGLElBREs7QUFFaENKLEVBQUFBLFNBQVMsTUFBVCxVQUFVTyxrQkFBTU0sS0FBTixDQUFZQyxLQUFaLENBQWtCSCxJQUFsQixZQUEyQk4sT0FBM0IsT0FBViw2Q0FBcURDLElBQXJEO0FBQ0Q7O0FBRU0sU0FBU0osR0FBVCxHQUFzQjtBQUMzQkYsRUFBQUEsU0FBUyxNQUFUO0FBQ0Q7O0FBRU0sU0FBU2UsVUFBVCxDQUFvQkMsS0FBcEIsRUFBMkI7QUFDaENkLEVBQUFBLEdBQUcsYUFBTWMsS0FBSyxDQUFDQyxHQUFOLENBQVUsVUFBQUMsSUFBSTtBQUFBLHVCQUFTQSxJQUFUO0FBQUEsR0FBZCxFQUErQkMsSUFBL0IsQ0FBb0MsSUFBcEMsQ0FBTixFQUFIO0FBQ0Q7O2VBRWNqQixHIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9lNjUzNzg4L2F6dGVjLWdhbmFjaGUtc3RhcnRlci1raXQvc2NyaXB0cy91dGlscyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbmltcG9ydCBjaGFsayBmcm9tICdjaGFsayc7XG5cbmZ1bmN0aW9uIGZvcm1hdExvZyguLi5jb250ZW50KSB7XG4gIGNvbnNvbGUubG9nKC4uLmNvbnRlbnQpO1xuICBjb25zb2xlLmxvZygpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3VjY2Vzc0xvZyguLi5hcmdzKSB7XG4gIGNvbnN0IFttZXNzYWdlLCAuLi5yZXN0XSA9IGFyZ3M7XG4gIGZvcm1hdExvZyhjaGFsay5ncmVlbihtZXNzYWdlKSwgLi4ucmVzdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3YXJuTG9nKC4uLmFyZ3MpIHtcbiAgY29uc3QgW21lc3NhZ2UsIC4uLnJlc3RdID0gYXJncztcbiAgZm9ybWF0TG9nKGNoYWxrLnllbGxvdy5ib2xkKGAgJHttZXNzYWdlfSBgKSwgLi4ucmVzdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlcnJvckxvZyguLi5hcmdzKSB7XG4gIGNvbnN0IFttZXNzYWdlLCAuLi5yZXN0XSA9IGFyZ3M7XG4gIGZvcm1hdExvZyhjaGFsay53aGl0ZS5iZ1JlZC5ib2xkKGAgJHttZXNzYWdlfSBgKSwgLi4ucmVzdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2coLi4uYXJncykge1xuICBmb3JtYXRMb2coLi4uYXJncyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2dFbnRyaWVzKGZpbGVzKSB7XG4gIGxvZyhgXFxuJHtmaWxlcy5tYXAoZmlsZSA9PiBgICAke2ZpbGV9YCkuam9pbignXFxuJyl9YCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGxvZztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "log.js"
      ],
      "names": [
        "formatLog",
        "console",
        "log",
        "successLog",
        "args",
        "message",
        "rest",
        "chalk",
        "green",
        "warnLog",
        "yellow",
        "bold",
        "errorLog",
        "white",
        "bgRed",
        "logEntries",
        "files",
        "map",
        "file",
        "join"
      ],
      "mappings": ";;;;;;;;;;;;;;;;AACA;;AADA;AAGA,SAASA,SAAT,GAA+B;AAAA;;AAC7B,cAAAC,OAAO,EAACC,GAAR;;AACAD,EAAAA,OAAO,CAACC,GAAR;AACD;;AAEM,SAASC,UAAT,GAA6B;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAAA,MAC3BC,OAD2B,GACPD,IADO;AAAA,MACfE,IADe,GACPF,IADO;AAElCJ,EAAAA,SAAS,MAAT,UAAUO,kBAAMC,KAAN,CAAYH,OAAZ,CAAV,6CAAmCC,IAAnC;AACD;;AAEM,SAASG,OAAT,GAA0B;AAAA,qCAANL,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAAA,MACxBC,OADwB,GACJD,IADI;AAAA,MACZE,IADY,GACJF,IADI;AAE/BJ,EAAAA,SAAS,MAAT,UAAUO,kBAAMG,MAAN,CAAaC,IAAb,YAAsBN,OAAtB,OAAV,6CAAgDC,IAAhD;AACD;;AAEM,SAASM,QAAT,GAA2B;AAAA,qCAANR,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAAA,MACzBC,OADyB,GACLD,IADK;AAAA,MACbE,IADa,GACLF,IADK;AAEhCJ,EAAAA,SAAS,MAAT,UAAUO,kBAAMM,KAAN,CAAYC,KAAZ,CAAkBH,IAAlB,YAA2BN,OAA3B,OAAV,6CAAqDC,IAArD;AACD;;AAEM,SAASJ,GAAT,GAAsB;AAC3BF,EAAAA,SAAS,MAAT;AACD;;AAEM,SAASe,UAAT,CAAoBC,KAApB,EAA2B;AAChCd,EAAAA,GAAG,aAAMc,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,uBAASA,IAAT;AAAA,GAAd,EAA+BC,IAA/B,CAAoC,IAApC,CAAN,EAAH;AACD;;eAEcjB,G",
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts/utils",
      "sourcesContent": [
        "/* eslint-disable no-console */\nimport chalk from 'chalk';\n\nfunction formatLog(...content) {\n  console.log(...content);\n  console.log();\n}\n\nexport function successLog(...args) {\n  const [message, ...rest] = args;\n  formatLog(chalk.green(message), ...rest);\n}\n\nexport function warnLog(...args) {\n  const [message, ...rest] = args;\n  formatLog(chalk.yellow.bold(` ${message} `), ...rest);\n}\n\nexport function errorLog(...args) {\n  const [message, ...rest] = args;\n  formatLog(chalk.white.bgRed.bold(` ${message} `), ...rest);\n}\n\nexport function log(...args) {\n  formatLog(...args);\n}\n\nexport function logEntries(files) {\n  log(`\\n${files.map(file => `  ${file}`).join('\\n')}`);\n}\n\nexport default log;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567874443617
  },
  "{\"sourceRoot\":\"/Users/e653788/aztec-ganache-starter-kit/scripts/tasks\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/e653788/aztec-ganache-starter-kit\",\"filename\":\"/Users/e653788/aztec-ganache-starter-kit/scripts/tasks/ganache.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e653788/aztec-ganache-starter-kit\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts/tasks",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/e653788/aztec-ganache-starter-kit",
      "filename": "/Users/e653788/aztec-ganache-starter-kit/scripts/tasks/ganache.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/e653788/aztec-ganache-starter-kit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e653788/aztec-ganache-starter-kit/scripts/tasks/ganache.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e653788/aztec-ganache-starter-kit/scripts/tasks/ganache.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts/tasks",
        "sourceFileName": "ganache.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _child_process = _interopRequireDefault(require(\"child_process\"));\n\nvar _web = _interopRequireDefault(require(\"web3\"));\n\nvar _ganache2 = _interopRequireDefault(require(\"../../ganache.config\"));\n\nrequire(\"../envConfig\");\n\nvar _log = require(\"../utils/log\");\n\nvar web3;\n\nvar getPort = function getPort() {\n  var port = _ganache2[\"default\"].port;\n  var argsConfig = process.argv.find(function (val) {\n    return val.match(/^--port=[0-9]+$/);\n  });\n\n  if (argsConfig) {\n    var _argsConfig$split = argsConfig.split('=');\n\n    var _argsConfig$split2 = (0, _slicedToArray2[\"default\"])(_argsConfig$split, 2);\n\n    port = _argsConfig$split2[1];\n  }\n\n  return port;\n};\n\nvar generateAccounts = function generateAccounts() {\n  var accounts = [];\n  var numberOfAccounts = _ganache2[\"default\"].numberOfAccounts,\n      defaultBalanceEther = _ganache2[\"default\"].defaultBalanceEther;\n\n  for (var i = 0; i < numberOfAccounts; i += 1) {\n    var address = void 0;\n    var privateKey = process.env[\"GANACHE_TESTING_ACCOUNT_\".concat(i)];\n\n    if (privateKey) {\n      var _web3$eth$accounts$pr = web3.eth.accounts.privateKeyToAccount(privateKey);\n\n      address = _web3$eth$accounts$pr.address;\n    } else {\n      var _web3$eth$accounts$cr = web3.eth.accounts.create();\n\n      address = _web3$eth$accounts$cr.address;\n      privateKey = _web3$eth$accounts$cr.privateKey;\n    }\n\n    var balance = web3.utils.toWei(\"\".concat(process.env[\"GANACHE_TESTING_ACCOUNT_\".concat(i, \"_BALANCE\")] || defaultBalanceEther), 'ether');\n    accounts.push({\n      address: address,\n      privateKey: privateKey,\n      balance: balance\n    });\n  }\n\n  return accounts;\n};\n\nfunction ganache() {\n  return _ganache.apply(this, arguments);\n}\n\nfunction _ganache() {\n  _ganache = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return new Promise(function (resolve) {\n              var _config$host = _ganache2[\"default\"].host,\n                  host = _config$host === void 0 ? 'localhost' : _config$host;\n              var port = getPort();\n              var provider = new _web[\"default\"].providers.HttpProvider(\"http://\".concat(host, \":\").concat(port));\n              web3 = new _web[\"default\"](provider);\n              var params = [];\n              var accounts = generateAccounts();\n              accounts.forEach(function (_ref) {\n                var privateKey = _ref.privateKey,\n                    balance = _ref.balance;\n                params.push(\"--account=\".concat(privateKey, \",\").concat(balance));\n              });\n\n              var instance = _child_process[\"default\"].spawn('ganache-cli', ['-p', port].concat(params), {\n                windowsVerbatimArguments: true\n              });\n\n              instance.stdout.on('data', function (data) {\n                process.stdout.write(data.toString('utf8'));\n              });\n              instance.stderr.on('data', function (data) {\n                (0, _log.log)(\"stderr:\\n \".concat(data));\n              });\n              instance.on('error', function (error) {\n                (0, _log.errorLog)(error);\n              });\n              instance.on('close', function (code) {\n                if (code === 0) {\n                  (0, _log.successLog)('Ganache instance cleard');\n                } else {\n                  (0, _log.log)(\"Child process exited with code \".concat(code));\n                }\n\n                return resolve();\n              });\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _ganache.apply(this, arguments);\n}\n\nvar _default = ganache;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbmFjaGUuanMiXSwibmFtZXMiOlsid2ViMyIsImdldFBvcnQiLCJwb3J0IiwiY29uZmlnIiwiYXJnc0NvbmZpZyIsInByb2Nlc3MiLCJhcmd2IiwiZmluZCIsInZhbCIsIm1hdGNoIiwic3BsaXQiLCJnZW5lcmF0ZUFjY291bnRzIiwiYWNjb3VudHMiLCJudW1iZXJPZkFjY291bnRzIiwiZGVmYXVsdEJhbGFuY2VFdGhlciIsImkiLCJhZGRyZXNzIiwicHJpdmF0ZUtleSIsImVudiIsImV0aCIsInByaXZhdGVLZXlUb0FjY291bnQiLCJjcmVhdGUiLCJiYWxhbmNlIiwidXRpbHMiLCJ0b1dlaSIsInB1c2giLCJnYW5hY2hlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJob3N0IiwicHJvdmlkZXIiLCJXZWIzIiwicHJvdmlkZXJzIiwiSHR0cFByb3ZpZGVyIiwicGFyYW1zIiwiZm9yRWFjaCIsImluc3RhbmNlIiwiY3AiLCJzcGF3biIsIndpbmRvd3NWZXJiYXRpbUFyZ3VtZW50cyIsInN0ZG91dCIsIm9uIiwiZGF0YSIsIndyaXRlIiwidG9TdHJpbmciLCJzdGRlcnIiLCJlcnJvciIsImNvZGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQU1BLElBQUlBLElBQUo7O0FBRUEsSUFBTUMsT0FBTyxHQUFHLFNBQVZBLE9BQVUsR0FBTTtBQUFBLE1BRWxCQyxJQUZrQixHQUdoQkMsb0JBSGdCLENBRWxCRCxJQUZrQjtBQUlwQixNQUFNRSxVQUFVLEdBQUdDLE9BQU8sQ0FBQ0MsSUFBUixDQUFhQyxJQUFiLENBQWtCLFVBQUFDLEdBQUc7QUFBQSxXQUFJQSxHQUFHLENBQUNDLEtBQUosQ0FBVSxpQkFBVixDQUFKO0FBQUEsR0FBckIsQ0FBbkI7O0FBQ0EsTUFBSUwsVUFBSixFQUFnQjtBQUFBLDRCQUNIQSxVQUFVLENBQUNNLEtBQVgsQ0FBaUIsR0FBakIsQ0FERzs7QUFBQTs7QUFDWFIsSUFBQUEs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aEIsQ0FBbUIsTUFBbkIsRUFBMkIsVUFBQ0MsSUFBRCxFQUFVO0FBQ25DLGtEQUFpQkEsSUFBakI7QUFDRCxlQUZEO0FBSUFOLGNBQUFBLFFBQVEsQ0FBQ0ssRUFBVCxDQUFZLE9BQVosRUFBcUIsVUFBQ0ssS0FBRCxFQUFXO0FBQzlCLG1DQUFTQSxLQUFUO0FBQ0QsZUFGRDtBQUlBVixjQUFBQSxRQUFRLENBQUNLLEVBQVQsQ0FBWSxPQUFaLEVBQXFCLFVBQUNNLElBQUQsRUFBVTtBQUM3QixvQkFBSUEsSUFBSSxLQUFLLENBQWIsRUFBZ0I7QUFDZCx1Q0FBVyx5QkFBWDtBQUNELGlCQUZELE1BRU87QUFDTCx5RUFBc0NBLElBQXRDO0FBQ0Q7O0FBRUQsdUJBQU9uQixPQUFPLEVBQWQ7QUFDRCxlQVJEO0FBU0QsYUFuREssQ0FEUjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O2VBdURlRixPIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9lNjUzNzg4L2F6dGVjLWdhbmFjaGUtc3RhcnRlci1raXQvc2NyaXB0cy90YXNrcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcCBmcm9tICdjaGlsZF9wcm9jZXNzJztcbmltcG9ydCBXZWIzIGZyb20gJ3dlYjMnO1xuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi8uLi9nYW5hY2hlLmNvbmZpZyc7XG5pbXBvcnQgJy4uL2VudkNvbmZpZyc7XG5pbXBvcnQge1xuICBsb2csXG4gIHN1Y2Nlc3NMb2csXG4gIGVycm9yTG9nLFxufSBmcm9tICcuLi91dGlscy9sb2cnO1xuXG5sZXQgd2ViMztcblxuY29uc3QgZ2V0UG9ydCA9ICgpID0+IHtcbiAgbGV0IHtcbiAgICBwb3J0LFxuICB9ID0gY29uZmlnO1xuICBjb25zdCBhcmdzQ29uZmlnID0gcHJvY2Vzcy5hcmd2LmZpbmQodmFsID0+IHZhbC5tYXRjaCgvXi0tcG9ydD1bMC05XSskLykpO1xuICBpZiAoYXJnc0NvbmZpZykge1xuICAgIFssIHBvcnRdID0gYXJnc0NvbmZpZy5zcGxpdCgnPScpO1xuICB9XG5cbiAgcmV0dXJuIHBvcnQ7XG59O1xuXG5jb25zdCBnZW5lcmF0ZUFjY291bnRzID0gKCkgPT4ge1xuICBjb25zdCBhY2NvdW50cyA9IFtdO1xuICBjb25zdCB7XG4gICAgbnVtYmVyT2ZBY2NvdW50cyxcbiAgICBkZWZhdWx0QmFsYW5jZUV0aGVyLFxuICB9ID0gY29uZmlnO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG51bWJlck9mQWNjb3VudHM7IGkgKz0gMSkge1xuICAgIGxldCBhZGRyZXNzO1xuICAgIGxldCBwcml2YXRlS2V5ID0gcHJvY2Vzcy5lbnZbYEdBTkFDSEVfVEVTVElOR19BQ0NPVU5UXyR7aX1gXTtcbiAgICBpZiAocHJpdmF0ZUtleSkge1xuICAgICAgKHsgYWRkcmVzcyB9ID0gd2ViMy5ldGguYWNjb3VudHMucHJpdmF0ZUtleVRvQWNjb3VudChwcml2YXRlS2V5KSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICh7XG4gICAgICAgIGFkZHJlc3MsXG4gICAgICAgIHByaXZhdGVLZXksXG4gICAgICB9ID0gd2ViMy5ldGguYWNjb3VudHMuY3JlYXRlKCkpO1xuICAgIH1cbiAgICBjb25zdCBiYWxhbmNlID0gd2ViMy51dGlscy50b1dlaShcbiAgICAgIGAke3Byb2Nlc3MuZW52W2BHQU5BQ0hFX1RFU1RJTkdfQUNDT1VOVF8ke2l9X0JBTEFOQ0VgXSB8fCBkZWZhdWx0QmFsYW5jZUV0aGVyfWAsXG4gICAgICAnZXRoZXInLFxuICAgICk7XG5cbiAgICBhY2NvdW50cy5wdXNoKHtcbiAgICAgIGFkZHJlc3MsXG4gICAgICBwcml2YXRlS2V5LFxuICAgICAgYmFsYW5jZSxcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gYWNjb3VudHM7XG59O1xuXG5hc3luYyBmdW5jdGlvbiBnYW5hY2hlKCkge1xuICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGhvc3QgPSAnbG9jYWxob3N0JyxcbiAgICB9ID0gY29uZmlnO1xuXG4gICAgY29uc3QgcG9ydCA9IGdldFBvcnQoKTtcbiAgICBjb25zdCBwcm92aWRlciA9IG5ldyBXZWIzLnByb3ZpZGVycy5IdHRwUHJvdmlkZXIoYGh0dHA6Ly8ke2hvc3R9OiR7cG9ydH1gKTtcbiAgICB3ZWIzID0gbmV3IFdlYjMocHJvdmlkZXIpO1xuXG4gICAgY29uc3QgcGFyYW1zID0gW107XG4gICAgY29uc3QgYWNjb3VudHMgPSBnZW5lcmF0ZUFjY291bnRzKCk7XG4gICAgYWNjb3VudHMuZm9yRWFjaCgoe1xuICAgICAgcHJpdmF0ZUtleSxcbiAgICAgIGJhbGFuY2UsXG4gICAgfSkgPT4ge1xuICAgICAgcGFyYW1zLnB1c2goYC0tYWNjb3VudD0ke3ByaXZhdGVLZXl9LCR7YmFsYW5jZX1gKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IGluc3RhbmNlID0gY3Auc3Bhd24oXG4gICAgICAnZ2FuYWNoZS1jbGknLFxuICAgICAgW1xuICAgICAgICAnLXAnLFxuICAgICAgICBwb3J0LFxuICAgICAgICAuLi5wYXJhbXMsXG4gICAgICBdLFxuICAgICAge1xuICAgICAgICB3aW5kb3dzVmVyYmF0aW1Bcmd1bWVudHM6IHRydWUsXG4gICAgICB9LFxuICAgICk7XG5cbiAgICBpbnN0YW5jZS5zdGRvdXQub24oJ2RhdGEnLCAoZGF0YSkgPT4ge1xuICAgICAgcHJvY2Vzcy5zdGRvdXQud3JpdGUoZGF0YS50b1N0cmluZygndXRmOCcpKTtcbiAgICB9KTtcblxuICAgIGluc3RhbmNlLnN0ZGVyci5vbignZGF0YScsIChkYXRhKSA9PiB7XG4gICAgICBsb2coYHN0ZGVycjpcXG4gJHtkYXRhfWApO1xuICAgIH0pO1xuXG4gICAgaW5zdGFuY2Uub24oJ2Vycm9yJywgKGVycm9yKSA9PiB7XG4gICAgICBlcnJvckxvZyhlcnJvcik7XG4gICAgfSk7XG5cbiAgICBpbnN0YW5jZS5vbignY2xvc2UnLCAoY29kZSkgPT4ge1xuICAgICAgaWYgKGNvZGUgPT09IDApIHtcbiAgICAgICAgc3VjY2Vzc0xvZygnR2FuYWNoZSBpbnN0YW5jZSBjbGVhcmQnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxvZyhgQ2hpbGQgcHJvY2VzcyBleGl0ZWQgd2l0aCBjb2RlICR7Y29kZX1gKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc29sdmUoKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdhbmFjaGU7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "ganache.js"
      ],
      "names": [
        "web3",
        "getPort",
        "port",
        "config",
        "argsConfig",
        "process",
        "argv",
        "find",
        "val",
        "match",
        "split",
        "generateAccounts",
        "accounts",
        "numberOfAccounts",
        "defaultBalanceEther",
        "i",
        "address",
        "privateKey",
        "env",
        "eth",
        "privateKeyToAccount",
        "create",
        "balance",
        "utils",
        "toWei",
        "push",
        "ganache",
        "Promise",
        "resolve",
        "host",
        "provider",
        "Web3",
        "providers",
        "HttpProvider",
        "params",
        "forEach",
        "instance",
        "cp",
        "spawn",
        "windowsVerbatimArguments",
        "stdout",
        "on",
        "data",
        "write",
        "toString",
        "stderr",
        "error",
        "code"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts/tasks",
      "sourcesContent": [
        "import cp from 'child_process';\nimport Web3 from 'web3';\nimport config from '../../ganache.config';\nimport '../envConfig';\nimport {\n  log,\n  successLog,\n  errorLog,\n} from '../utils/log';\n\nlet web3;\n\nconst getPort = () => {\n  let {\n    port,\n  } = config;\n  const argsConfig = process.argv.find(val => val.match(/^--port=[0-9]+$/));\n  if (argsConfig) {\n    [, port] = argsConfig.split('=');\n  }\n\n  return port;\n};\n\nconst generateAccounts = () => {\n  const accounts = [];\n  const {\n    numberOfAccounts,\n    defaultBalanceEther,\n  } = config;\n  for (let i = 0; i < numberOfAccounts; i += 1) {\n    let address;\n    let privateKey = process.env[`GANACHE_TESTING_ACCOUNT_${i}`];\n    if (privateKey) {\n      ({ address } = web3.eth.accounts.privateKeyToAccount(privateKey));\n    } else {\n      ({\n        address,\n        privateKey,\n      } = web3.eth.accounts.create());\n    }\n    const balance = web3.utils.toWei(\n      `${process.env[`GANACHE_TESTING_ACCOUNT_${i}_BALANCE`] || defaultBalanceEther}`,\n      'ether',\n    );\n\n    accounts.push({\n      address,\n      privateKey,\n      balance,\n    });\n  }\n  return accounts;\n};\n\nasync function ganache() {\n  await new Promise((resolve) => {\n    const {\n      host = 'localhost',\n    } = config;\n\n    const port = getPort();\n    const provider = new Web3.providers.HttpProvider(`http://${host}:${port}`);\n    web3 = new Web3(provider);\n\n    const params = [];\n    const accounts = generateAccounts();\n    accounts.forEach(({\n      privateKey,\n      balance,\n    }) => {\n      params.push(`--account=${privateKey},${balance}`);\n    });\n\n    const instance = cp.spawn(\n      'ganache-cli',\n      [\n        '-p',\n        port,\n        ...params,\n      ],\n      {\n        windowsVerbatimArguments: true,\n      },\n    );\n\n    instance.stdout.on('data', (data) => {\n      process.stdout.write(data.toString('utf8'));\n    });\n\n    instance.stderr.on('data', (data) => {\n      log(`stderr:\\n ${data}`);\n    });\n\n    instance.on('error', (error) => {\n      errorLog(error);\n    });\n\n    instance.on('close', (code) => {\n      if (code === 0) {\n        successLog('Ganache instance cleard');\n      } else {\n        log(`Child process exited with code ${code}`);\n      }\n\n      return resolve();\n    });\n  });\n}\n\nexport default ganache;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567874443617
  },
  "{\"sourceRoot\":\"/Users/e653788/aztec-ganache-starter-kit\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/e653788/aztec-ganache-starter-kit\",\"filename\":\"/Users/e653788/aztec-ganache-starter-kit/ganache.config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e653788/aztec-ganache-starter-kit\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/e653788/aztec-ganache-starter-kit",
      "filename": "/Users/e653788/aztec-ganache-starter-kit/ganache.config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/e653788/aztec-ganache-starter-kit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e653788/aztec-ganache-starter-kit/ganache.config.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e653788/aztec-ganache-starter-kit/ganache.config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit",
        "sourceFileName": "ganache.config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  host: '127.0.0.1',\n  port: 8545,\n  numberOfAccounts: 10,\n  defaultBalanceEther: 100\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbmFjaGUuY29uZmlnLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJob3N0IiwicG9ydCIsIm51bWJlck9mQWNjb3VudHMiLCJkZWZhdWx0QmFsYW5jZUV0aGVyIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsSUFBSSxFQUFFLFdBRFM7QUFFZkMsRUFBQUEsSUFBSSxFQUFFLElBRlM7QUFHZkMsRUFBQUEsZ0JBQWdCLEVBQUUsRUFISDtBQUlmQyxFQUFBQSxtQkFBbUIsRUFBRTtBQUpOLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9lNjUzNzg4L2F6dGVjLWdhbmFjaGUtc3RhcnRlci1raXQiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgaG9zdDogJzEyNy4wLjAuMScsXG4gIHBvcnQ6IDg1NDUsXG4gIG51bWJlck9mQWNjb3VudHM6IDEwLFxuICBkZWZhdWx0QmFsYW5jZUV0aGVyOiAxMDAsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "ganache.config.js"
      ],
      "names": [
        "module",
        "exports",
        "host",
        "port",
        "numberOfAccounts",
        "defaultBalanceEther"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,IAAI,EAAE,WADS;AAEfC,EAAAA,IAAI,EAAE,IAFS;AAGfC,EAAAA,gBAAgB,EAAE,EAHH;AAIfC,EAAAA,mBAAmB,EAAE;AAJN,CAAjB",
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit",
      "sourcesContent": [
        "module.exports = {\n  host: '127.0.0.1',\n  port: 8545,\n  numberOfAccounts: 10,\n  defaultBalanceEther: 100,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567874443615
  },
  "{\"sourceRoot\":\"/Users/e653788/aztec-ganache-starter-kit/scripts\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/e653788/aztec-ganache-starter-kit\",\"filename\":\"/Users/e653788/aztec-ganache-starter-kit/scripts/envConfig.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e653788/aztec-ganache-starter-kit\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/e653788/aztec-ganache-starter-kit",
      "filename": "/Users/e653788/aztec-ganache-starter-kit/scripts/envConfig.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/e653788/aztec-ganache-starter-kit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e653788/aztec-ganache-starter-kit/scripts/envConfig.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e653788/aztec-ganache-starter-kit/scripts/envConfig.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts",
        "sourceFileName": "envConfig.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar dotenvFile = _path[\"default\"].resolve(__dirname, '../.env');\n\nif (_fs[\"default\"].existsSync(dotenvFile)) {\n  _dotenv[\"default\"].config({\n    path: dotenvFile\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudkNvbmZpZy5qcyJdLCJuYW1lcyI6WyJkb3RlbnZGaWxlIiwicGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJmcyIsImV4aXN0c1N5bmMiLCJkb3RlbnYiLCJjb25maWciXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxVQUFVLEdBQUdDLGlCQUFLQyxPQUFMLENBQWFDLFNBQWIsRUFBd0IsU0FBeEIsQ0FBbkI7O0FBQ0EsSUFBSUMsZUFBR0MsVUFBSCxDQUFjTCxVQUFkLENBQUosRUFBK0I7QUFDN0JNLHFCQUFPQyxNQUFQLENBQWM7QUFBRU4sSUFBQUEsSUFBSSxFQUFFRDtBQUFSLEdBQWQ7QUFDRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZTY1Mzc4OC9henRlYy1nYW5hY2hlLXN0YXJ0ZXIta2l0L3NjcmlwdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudic7XG5cbmNvbnN0IGRvdGVudkZpbGUgPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4vLmVudicpO1xuaWYgKGZzLmV4aXN0c1N5bmMoZG90ZW52RmlsZSkpIHtcbiAgZG90ZW52LmNvbmZpZyh7IHBhdGg6IGRvdGVudkZpbGUgfSk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "envConfig.js"
      ],
      "names": [
        "dotenvFile",
        "path",
        "resolve",
        "__dirname",
        "fs",
        "existsSync",
        "dotenv",
        "config"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,UAAU,GAAGC,iBAAKC,OAAL,CAAaC,SAAb,EAAwB,SAAxB,CAAnB;;AACA,IAAIC,eAAGC,UAAH,CAAcL,UAAd,CAAJ,EAA+B;AAC7BM,qBAAOC,MAAP,CAAc;AAAEN,IAAAA,IAAI,EAAED;AAAR,GAAd;AACD",
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/scripts",
      "sourcesContent": [
        "import path from 'path';\nimport fs from 'fs';\nimport dotenv from 'dotenv';\n\nconst dotenvFile = path.resolve(__dirname, '../.env');\nif (fs.existsSync(dotenvFile)) {\n  dotenv.config({ path: dotenvFile });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567874443616
  },
  "{\"sourceRoot\":\"/Users/e653788/aztec-ganache-starter-kit/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/e653788/aztec-ganache-starter-kit\",\"filename\":\"/Users/e653788/aztec-ganache-starter-kit/test/demo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e653788/aztec-ganache-starter-kit\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/e653788/aztec-ganache-starter-kit",
      "filename": "/Users/e653788/aztec-ganache-starter-kit/test/demo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/e653788/aztec-ganache-starter-kit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e653788/aztec-ganache-starter-kit/test/demo.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e653788/aztec-ganache-starter-kit/test/demo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/test",
        "sourceFileName": "demo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar dotenv = require('dotenv');\n\ndotenv.config();\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nvar MINT_PROOF = _devUtils[\"default\"].proofs.MINT_PROOF;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof;\ncontract('Private payment', function (accounts) {\n  var bob = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_0);\n  var sally = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_1);\n  var privatePaymentContract;\n  beforeEach(\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ZkAssetMintable.deployed();\n\n          case 2:\n            privatePaymentContract = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  it('Bob should be able to deposit 100 then pay sally 25 by splitting notes he owns',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee2() {\n    var bobNote1, newMintCounterNote, zeroMintCounterNote, sender, mintedNotes, mintProof, mintData, sallyTaxiFee, bobNote2, sendProofSender, withdrawPublicValue, publicOwner, sendProof, sendProofData, sendProofSignatures;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('Bob wants to deposit 100');\n            _context2.next = 3;\n            return aztec.note.create(bob.publicKey, 100);\n\n          case 3:\n            bobNote1 = _context2.sent;\n            _context2.next = 6;\n            return aztec.note.create(bob.publicKey, 100);\n\n          case 6:\n            newMintCounterNote = _context2.sent;\n            _context2.next = 9;\n            return aztec.note.createZeroValueNote();\n\n          case 9:\n            zeroMintCounterNote = _context2.sent;\n            sender = privatePaymentContract.address;\n            mintedNotes = [bobNote1];\n            mintProof = new MintProof(zeroMintCounterNote, newMintCounterNote, mintedNotes, sender);\n            mintData = mintProof.encodeABI();\n            _context2.next = 16;\n            return privatePaymentContract.confidentialMint(MINT_PROOF, mintData, {\n              from: accounts[0]\n            });\n\n          case 16:\n            console.log('Bob succesffully deposited 100'); // bob needs to pay sally for a taxi\n            // the taxi is 25\n            // if bob pays with his note worth 100 he requires 75 change\n\n            console.log('Bob takes a taxi, Sally is the driver');\n            _context2.next = 20;\n            return aztec.note.create(sally.publicKey, 25);\n\n          case 20:\n            sallyTaxiFee = _context2.sent;\n            console.log('The fare comes to 25');\n            _context2.next = 24;\n            return aztec.note.create(bob.publicKey, 75);\n\n          case 24:\n            bobNote2 = _context2.sent;\n            sendProofSender = accounts[0];\n            withdrawPublicValue = 0;\n            publicOwner = accounts[0];\n            sendProof = new JoinSplitProof(mintedNotes, [sallyTaxiFee, bobNote2], sendProofSender, withdrawPublicValue, publicOwner);\n            sendProofData = sendProof.encodeABI(privatePaymentContract.address);\n            sendProofSignatures = sendProof.constructSignatures(privatePaymentContract.address, [bob]);\n            _context2.next = 33;\n            return privatePaymentContract.confidentialTransfer(sendProofData, sendProofSignatures, {\n              from: accounts[0]\n            });\n\n          case 33:\n            console.log('Bob paid sally 25 for the taxi and gets 75 back');\n\n          case 34:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "demo.js"
      ],
      "names": [
        "aztec",
        "require",
        "dotenv",
        "config",
        "secp256k1",
        "ZkAssetMintable",
        "artifacts",
        "MINT_PROOF",
        "utils",
        "proofs",
        "JoinSplitProof",
        "MintProof",
        "contract",
        "accounts",
        "bob",
        "accountFromPrivateKey",
        "process",
        "env",
        "GANACHE_TESTING_ACCOUNT_0",
        "sally",
        "GANACHE_TESTING_ACCOUNT_1",
        "privatePaymentContract",
        "beforeEach",
        "deployed",
        "it",
        "console",
        "log",
        "note",
        "create",
        "publicKey",
        "bobNote1",
        "newMintCounterNote",
        "createZeroValueNote",
        "zeroMintCounterNote",
        "sender",
        "address",
        "mintedNotes",
        "mintProof",
        "mintData",
        "encodeABI",
        "confidentialMint",
        "from",
        "sallyTaxiFee",
        "bobNote2",
        "sendProofSender",
        "withdrawPublicValue",
        "publicOwner",
        "sendProof",
        "sendProofData",
        "sendProofSignatures",
        "constructSignatures",
        "confidentialTransfer"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst dotenv = require('dotenv');\ndotenv.config();\nconst secp256k1 = require('@aztec/secp256k1');\n\n\nconst ZkAssetMintable = artifacts.require('./ZkAssetMintable.sol');\n\nconst {\n  proofs: {\n    MINT_PROOF,\n  },\n} = utils;\n\nconst { JoinSplitProof, MintProof } = aztec;\n\ncontract('Private payment', accounts => {\n\n  const bob = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_0);\n  const sally = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_1);\n  let privatePaymentContract;\n\n  beforeEach(async () => {\n    privatePaymentContract = await ZkAssetMintable.deployed();\n  });\n\n  it('Bob should be able to deposit 100 then pay sally 25 by splitting notes he owns', async() => {\n\n    console.log('Bob wants to deposit 100');\n    const bobNote1 = await aztec.note.create(bob.publicKey, 100);\n\n    const newMintCounterNote = await aztec.note.create(bob.publicKey, 100);\n    const zeroMintCounterNote = await aztec.note.createZeroValueNote();\n    const sender = privatePaymentContract.address;\n    const mintedNotes = [bobNote1];\n\n    const mintProof = new MintProof(\n      zeroMintCounterNote,\n      newMintCounterNote,\n      mintedNotes,\n      sender,\n    );\n\n    const mintData = mintProof.encodeABI();\n\n    await privatePaymentContract.confidentialMint(MINT_PROOF, mintData, {from: accounts[0]});\n\n    console.log('Bob succesffully deposited 100');\n\n    // bob needs to pay sally for a taxi\n    // the taxi is 25\n    // if bob pays with his note worth 100 he requires 75 change\n    console.log('Bob takes a taxi, Sally is the driver');\n    const sallyTaxiFee = await aztec.note.create(sally.publicKey, 25);\n\n\n    console.log('The fare comes to 25');\n    const bobNote2 = await aztec.note.create(bob.publicKey, 75);\n    const sendProofSender = accounts[0];\n    const withdrawPublicValue = 0;\n    const publicOwner = accounts[0];\n\n    const sendProof = new JoinSplitProof(\n        mintedNotes,\n        [sallyTaxiFee, bobNote2],\n        sendProofSender,\n        withdrawPublicValue,\n        publicOwner\n    );\n    const sendProofData = sendProof.encodeABI(privatePaymentContract.address);\n    const sendProofSignatures = sendProof.constructSignatures(privatePaymentContract.address, [bob])\n    await privatePaymentContract.confidentialTransfer(sendProofData, sendProofSignatures, {\n      from: accounts[0],\n    });\n\n    console.log(\n      'Bob paid sally 25 for the taxi and gets 75 back'\n    );\n\n  })\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567874443617
  },
  "{\"sourceRoot\":\"/Users/e653788/aztec-ganache-starter-kit/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/e653788/aztec-ganache-starter-kit\",\"filename\":\"/Users/e653788/aztec-ganache-starter-kit/test/lottery.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e653788/aztec-ganache-starter-kit\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/e653788/aztec-ganache-starter-kit",
      "filename": "/Users/e653788/aztec-ganache-starter-kit/test/lottery.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/e653788/aztec-ganache-starter-kit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e653788/aztec-ganache-starter-kit/test/lottery.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e653788/aztec-ganache-starter-kit/test/lottery.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/test",
        "sourceFileName": "lottery.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar dotenv = require('dotenv');\n\ndotenv.config();\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar ZkAssetMintable = artifacts.require('ZkAssetMintable');\n\nvar Bidding = artifacts.require('Bidding');\n\nvar ACE = artifacts.require('ACE');\n\nvar PublicRangeValidator = artifacts.require('PublicRange');\n\nvar PUBLIC_RANGE_PROOF = _devUtils[\"default\"].proofs.PUBLIC_RANGE_PROOF,\n    constants = _devUtils[\"default\"].constants;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof,\n    PublicRangeProof = aztec.PublicRangeProof;\ncontract('Private payment', function (accounts) {\n  var bob = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_0);\n  var sally = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_1);\n  var privatePaymentContract; // beforeEach(async () => {\n  //   privatePaymentContract = await ZkAssetMintable.deployed();\n  // });\n\n  before(\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var ace, publicRangeValidator;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ACE[\"new\"]();\n\n          case 2:\n            ace = _context.sent;\n            _context.next = 5;\n            return ace.setCommonReferenceString(constants.CRS);\n\n          case 5:\n            _context.next = 7;\n            return PublicRangeValidator[\"new\"]();\n\n          case 7:\n            publicRangeValidator = _context.sent;\n            _context.next = 10;\n            return ace.setProof(PUBLIC_RANGE_PROOF, publicRangeValidator.address);\n\n          case 10:\n            _context.next = 12;\n            return Bidding[\"new\"](ace.address);\n\n          case 12:\n            privatePaymentContract = _context.sent;\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  it('Bob should be able to deposit 100 then pay sally 25 by splitting notes he owns',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee2() {\n    var bobNote1, newBidNote, topBid, sender, isGreaterOrEqual, utilityNote, publicRangeProof, prData;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('Bob wants to deposit 100');\n            _context2.next = 3;\n            return aztec.note.create(bob.publicKey, 100);\n\n          case 3:\n            bobNote1 = _context2.sent;\n            console.log('1');\n            _context2.next = 7;\n            return aztec.note.create(bob.publicKey, 100);\n\n          case 7:\n            newBidNote = _context2.sent;\n            console.log('1.1', newBidNote);\n            _context2.next = 11;\n            return privatePaymentContract.TopBid();\n\n          case 11:\n            topBid = _context2.sent;\n            console.log('1.2', topBid);\n            sender = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_0);\n            console.log('1.3', sender);\n            isGreaterOrEqual = true;\n            console.log('1.4', isGreaterOrEqual);\n            _context2.next = 19;\n            return aztec.note.create(bob.publicKey, 100);\n\n          case 19:\n            utilityNote = _context2.sent;\n            console.log('2', utilityNote);\n            publicRangeProof = new PublicRangeProof(newBidNote, topBid.bidAmount, accounts[0], isGreaterOrEqual, utilityNote);\n            console.log('3');\n            console.log(publicRangeProof);\n            console.log('4');\n            prData = publicRangeProof.encodeABI(privatePaymentContract.address);\n            console.log('5');\n            console.log(prData);\n            console.log('6', '66563');\n            _context2.next = 31;\n            return privatePaymentContract.submitProof(PUBLIC_RANGE_PROOF, accounts[0], prData);\n\n          case 31:\n            console.log('7');\n\n          case 32:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "lottery.js"
      ],
      "names": [
        "aztec",
        "require",
        "dotenv",
        "config",
        "secp256k1",
        "ZkAssetMintable",
        "artifacts",
        "Bidding",
        "ACE",
        "PublicRangeValidator",
        "PUBLIC_RANGE_PROOF",
        "utils",
        "proofs",
        "constants",
        "JoinSplitProof",
        "MintProof",
        "PublicRangeProof",
        "contract",
        "accounts",
        "bob",
        "accountFromPrivateKey",
        "process",
        "env",
        "GANACHE_TESTING_ACCOUNT_0",
        "sally",
        "GANACHE_TESTING_ACCOUNT_1",
        "privatePaymentContract",
        "before",
        "ace",
        "setCommonReferenceString",
        "CRS",
        "publicRangeValidator",
        "setProof",
        "address",
        "it",
        "console",
        "log",
        "note",
        "create",
        "publicKey",
        "bobNote1",
        "newBidNote",
        "TopBid",
        "topBid",
        "sender",
        "isGreaterOrEqual",
        "utilityNote",
        "publicRangeProof",
        "bidAmount",
        "prData",
        "encodeABI",
        "submitProof"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst dotenv = require('dotenv');\ndotenv.config();\nconst secp256k1 = require('@aztec/secp256k1');\n\n\nconst ZkAssetMintable = artifacts.require('ZkAssetMintable');\nconst Bidding = artifacts.require('Bidding');\nconst ACE = artifacts.require('ACE');\nconst PublicRangeValidator = artifacts.require('PublicRange');\n\nconst {\n  proofs: {\n    PUBLIC_RANGE_PROOF,\n  },\n  constants,\n} = utils;\n\n\n\n\nconst { JoinSplitProof, MintProof, PublicRangeProof } = aztec;\n\ncontract('Private payment', accounts => {\n\n  const bob = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_0);\n  const sally = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_1);\n  let privatePaymentContract;\n\n // beforeEach(async () => {\n //   privatePaymentContract = await ZkAssetMintable.deployed();\n // });\n  before(async () => {\n    const ace = await ACE.new();\n    await ace.setCommonReferenceString(constants.CRS);\n    const publicRangeValidator = await PublicRangeValidator.new();\n    await ace.setProof(PUBLIC_RANGE_PROOF, publicRangeValidator.address);\n    privatePaymentContract = await Bidding.new(ace.address);\n  });\n  it('Bob should be able to deposit 100 then pay sally 25 by splitting notes he owns', async() => {\n\n    console.log('Bob wants to deposit 100');\n    const bobNote1 = await aztec.note.create(bob.publicKey, 100);\n    console.log('1');\n\n    const newBidNote = await aztec.note.create(bob.publicKey, 100);\n    console.log('1.1', newBidNote);\n    const topBid = await privatePaymentContract.TopBid();\n    console.log('1.2', topBid);\n    const sender = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_0);\n    console.log('1.3', sender);\n    const isGreaterOrEqual = true;\n    console.log('1.4', isGreaterOrEqual);\n    const utilityNote = await aztec.note.create(bob.publicKey, 100)\n    console.log('2', utilityNote);\n\n    const publicRangeProof = new PublicRangeProof(\n        newBidNote,\n        topBid.bidAmount,\n        accounts[0],\n        isGreaterOrEqual,\n        utilityNote,\n    );\n    console.log('3');\n\n    console.log(publicRangeProof)\n    console.log('4');\n\n    const prData = publicRangeProof.encodeABI(privatePaymentContract.address);\n    console.log('5');\n    console.log(prData)\n    console.log('6','66563');\n    await privatePaymentContract.submitProof(PUBLIC_RANGE_PROOF, accounts[0], prData);\n    console.log('7');\n\n  })\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567907158967
  },
  "{\"sourceRoot\":\"/Users/e653788/aztec-ganache-starter-kit/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/e653788/aztec-ganache-starter-kit\",\"filename\":\"/Users/e653788/aztec-ganache-starter-kit/test/lottery_private.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e653788/aztec-ganache-starter-kit\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/e653788/aztec-ganache-starter-kit",
      "filename": "/Users/e653788/aztec-ganache-starter-kit/test/lottery_private.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/e653788/aztec-ganache-starter-kit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e653788/aztec-ganache-starter-kit/test/lottery_private.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e653788/aztec-ganache-starter-kit/test/lottery_private.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/test",
        "sourceFileName": "lottery_private.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _devUtils = _interopRequireDefault(require(\"@aztec/dev-utils\"));\n\nvar aztec = require('aztec.js');\n\nvar dotenv = require('dotenv');\n\ndotenv.config();\n\nvar secp256k1 = require('@aztec/secp256k1');\n\nvar Bidding = artifacts.require('Bidding');\n\nvar ACE = artifacts.require('ACE');\n\nvar PublicRangeValidator = artifacts.require('PublicRange');\n\nvar PrivateRangeValidator = artifacts.require('PrivateRange');\n\nvar _utils$proofs = _devUtils[\"default\"].proofs,\n    PUBLIC_RANGE_PROOF = _utils$proofs.PUBLIC_RANGE_PROOF,\n    PRIVATE_RANGE_PROOF = _utils$proofs.PRIVATE_RANGE_PROOF,\n    constants = _devUtils[\"default\"].constants;\nvar JoinSplitProof = aztec.JoinSplitProof,\n    MintProof = aztec.MintProof,\n    PublicRangeProof = aztec.PublicRangeProof,\n    PrivateRangeProof = aztec.PrivateRangeProof;\ncontract('Private payment', function (accounts) {\n  var bob = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_0);\n  var sally = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_1);\n  var privatePaymentContract; // beforeEach(async () => {\n  //   privatePaymentContract = await ZkAssetMintable.deployed();\n  // });\n\n  before(\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee() {\n    var ace, publicRangeValidator, privateRangeValidator;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ACE[\"new\"]();\n\n          case 2:\n            ace = _context.sent;\n            _context.next = 5;\n            return ace.setCommonReferenceString(constants.CRS);\n\n          case 5:\n            _context.next = 7;\n            return PublicRangeValidator[\"new\"]();\n\n          case 7:\n            publicRangeValidator = _context.sent;\n            _context.next = 10;\n            return ace.setProof(PUBLIC_RANGE_PROOF, publicRangeValidator.address);\n\n          case 10:\n            _context.next = 12;\n            return PrivateRangeValidator[\"new\"]();\n\n          case 12:\n            privateRangeValidator = _context.sent;\n            _context.next = 15;\n            return ace.setProof(PRIVATE_RANGE_PROOF, privateRangeValidator.address);\n\n          case 15:\n            _context.next = 17;\n            return Bidding[\"new\"](ace.address);\n\n          case 17:\n            privatePaymentContract = _context.sent;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  it('Create a fake public bid note and then use private range to compare',\n  /*#__PURE__*/\n  (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee2() {\n    var minAmount, topBidNote, comparisonNote, newAmount, privateBidNote, utilityNote, isGreaterOrEqual, privateRangeProof, prData;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('Create public range note');\n            console.log(\"Can't store note so store info for note\");\n            minAmount = 100;\n            console.log('Set note to topBid');\n            _context2.next = 6;\n            return privatePaymentContract.setTopBidNote(bob.publicKey, minAmount);\n\n          case 6:\n            _context2.next = 8;\n            return privatePaymentContract.TopBidNote();\n\n          case 8:\n            topBidNote = _context2.sent;\n            console.log('Create the comparison note from topBid');\n            _context2.next = 12;\n            return aztec.note.create(topBidNote.user, topBidNote.bidAmount);\n\n          case 12:\n            comparisonNote = _context2.sent;\n            console.log('Set all information for new private range proof');\n            newAmount = 150;\n            _context2.next = 17;\n            return aztec.note.create(sally.publicKey, newAmount);\n\n          case 17:\n            privateBidNote = _context2.sent;\n            _context2.next = 20;\n            return aztec.note.create(sally.publicKey, newAmount - topBidNote.bidAmount);\n\n          case 20:\n            utilityNote = _context2.sent;\n            isGreaterOrEqual = true;\n            console.log('Create private range comparison');\n            privateRangeProof = new PrivateRangeProof(privateBidNote, comparisonNote, utilityNote, accounts[1], isGreaterOrEqual);\n            console.log(privateRangeProof); //const prData = publicRangeProof.encodeABI(privatePaymentContract.address);\n            //await privatePaymentContract.submitProof(PUBLIC_RANGE_PROOF, accounts[0], prData);\n\n            console.log('encode private range proof');\n            prData = privateRangeProof.encodeABI(privatePaymentContract.address);\n            _context2.next = 29;\n            return privatePaymentContract.submitProof(PRIVATE_RANGE_PROOF, accounts[1], prData);\n\n          case 29:\n            console.log(\"reached here\");\n\n          case 30:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvdHRlcnlfcHJpdmF0ZS5qcyJdLCJuYW1lcyI6WyJhenRlYyIsInJlcXVpcmUiLCJkb3RlbnYiLCJjb25maWciLCJzZWNwMjU2azEiLCJCaWRkaW5nIiwiYXJ0aWZhY3RzIiwiQUNFIiwiUHVibGljUmFuZ2VWYWxpZGF0b3IiLCJQcml2YXRlUmFuZ2VWYWxpZGF0b3IiLCJ1dGlscyIsInByb29mcyIsIlBVQkxJQ19SQU5HRV9QUk9PRiIsIlBSSVZBVEVfUkFOR0VfUFJPT0YiLCJjb25zdGFudHMiLCJKb2luU3BsaXRQcm9vZiIsIk1pbnRQcm9vZiIsIlB1YmxpY1JhbmdlUHJvb2YiLCJQcml2YXRlUmFuZ2VQcm9vZiIsImNvbnRyYWN0IiwiYWNjb3VudHMiLCJib2IiLCJhY2NvdW50RnJvbVByaXZhdGVLZXkiLCJwcm9jZXNzIiwiZW52IiwiR0FOQUNIRV9URVNUSU5HX0FDQ09VTlRfMCIsInNhbGx5IiwiR0FOQUNIRV9URVNUSU5HX0FDQ09VTlRfMSIsInByaXZhdGVQYXltZW50Q29udHJhY3QiLCJiZWZvcmUiLCJhY2UiLCJzZXRDb21tb25SZWZlcmVuY2VTdHJpbmciLCJDUlMiLCJwdWJsaWNSYW5nZVZhbGlkYXRvciIsInNldFByb29mIiwiYWRkcmVzcyIsInByaXZhdGVSYW5nZVZhbGlkYXRvciIsIml0IiwiY29uc29sZSIsImxvZyIsIm1pbkFtb3VudCIsInNldFRvcEJpZE5vdGUiLCJwdWJsaWNLZXkiLCJUb3BCaWROb3RlIiwidG9wQmlkTm90ZSIsIm5vdGUiLCJjcmVhdGUiLCJ1c2VyIiwiYmlkQW1vdW50IiwiY29tcGFyaXNvbk5vdGUiLCJuZXdBbW91bnQiLCJwcml2YXRlQmlkTm90ZSIsInV0aWxpdHlOb3RlIiwiaXNHcmVhdGVyT3JFcXVhbCIsInByaXZhdGVSYW5nZVByb29mIiwicHJEYXRhIiwiZW5jb2RlQUJJIiwic3VibWl0UHJvb2YiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFP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LENBekN5RDtBQUFBO0FBQUEsbUJBMENsRVAsc0JBQXNCLENBQUM2QixXQUF2QixDQUFtQzVDLG1CQUFuQyxFQUF3RE8sUUFBUSxDQUFDLENBQUQsQ0FBaEUsRUFBcUVtQyxNQUFyRSxDQTFDa0U7O0FBQUE7QUEyQ3hFakIsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBWjs7QUEzQ3dFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQXhFLEdBQUY7QUE2Q0QsQ0FsRU8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZTY1Mzc4OC9henRlYy1nYW5hY2hlLXN0YXJ0ZXIta2l0L3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnQGF6dGVjL2Rldi11dGlscyc7XG5cbmNvbnN0IGF6dGVjID0gcmVxdWlyZSgnYXp0ZWMuanMnKTtcbmNvbnN0IGRvdGVudiA9IHJlcXVpcmUoJ2RvdGVudicpO1xuZG90ZW52LmNvbmZpZygpO1xuY29uc3Qgc2VjcDI1NmsxID0gcmVxdWlyZSgnQGF6dGVjL3NlY3AyNTZrMScpO1xuXG5jb25zdCBCaWRkaW5nID0gYXJ0aWZhY3RzLnJlcXVpcmUoJ0JpZGRpbmcnKTtcbmNvbnN0IEFDRSA9IGFydGlmYWN0cy5yZXF1aXJlKCdBQ0UnKTtcbmNvbnN0IFB1YmxpY1JhbmdlVmFsaWRhdG9yID0gYXJ0aWZhY3RzLnJlcXVpcmUoJ1B1YmxpY1JhbmdlJyk7XG5jb25zdCBQcml2YXRlUmFuZ2VWYWxpZGF0b3IgPSBhcnRpZmFjdHMucmVxdWlyZSgnUHJpdmF0ZVJhbmdlJyk7XG5cbmNvbnN0IHtcbiAgcHJvb2ZzOiB7XG4gICAgUFVCTElDX1JBTkdFX1BST09GLFxuICAgIFBSSVZBVEVfUkFOR0VfUFJPT0YsXG4gIH0sXG4gIGNvbnN0YW50cyxcbn0gPSB1dGlscztcblxuXG5cbmNvbnN0IHsgSm9pblNwbGl0UHJvb2YsIE1pbnRQcm9vZiwgUHVibGljUmFuZ2VQcm9vZiwgUHJpdmF0ZVJhbmdlUHJvb2Z9ID0gYXp0ZWM7XG5cbmNvbnRyYWN0KCdQcml2YXRlIHBheW1lbnQnLCBhY2NvdW50cyA9PiB7XG5cbiAgY29uc3QgYm9iID0gc2VjcDI1NmsxLmFjY291bnRGcm9tUHJpdmF0ZUtleShwcm9jZXNzLmVudi5HQU5BQ0hFX1RFU1RJTkdfQUNDT1VOVF8wKTtcbiAgY29uc3Qgc2FsbHkgPSBzZWNwMjU2azEuYWNjb3VudEZyb21Qcml2YXRlS2V5KHByb2Nlc3MuZW52LkdBTkFDSEVfVEVTVElOR19BQ0NPVU5UXzEpO1xuICBsZXQgcHJpdmF0ZVBheW1lbnRDb250cmFjdDtcblxuIC8vIGJlZm9yZUVhY2goYXN5bmMgKCkgPT4ge1xuIC8vICAgcHJpdmF0ZVBheW1lbnRDb250cmFjdCA9IGF3YWl0IFprQXNzZXRNaW50YWJsZS5kZXBsb3llZCgpO1xuIC8vIH0pO1xuICBiZWZvcmUoYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFjZSA9IGF3YWl0IEFDRS5uZXcoKTtcbiAgICBhd2FpdCBhY2Uuc2V0Q29tbW9uUmVmZXJlbmNlU3RyaW5nKGNvbnN0YW50cy5DUlMpO1xuXG4gICAgY29uc3QgcHVibGljUmFuZ2VWYWxpZGF0b3IgPSBhd2FpdCBQdWJsaWNSYW5nZVZhbGlkYXRvci5uZXcoKTtcbiAgICBhd2FpdCBhY2Uuc2V0UHJvb2YoUFVCTElDX1JBTkdFX1BST09GLCBwdWJsaWNSYW5nZVZhbGlkYXRvci5hZGRyZXNzKTtcblxuICAgIGNvbnN0IHByaXZhdGVSYW5nZVZhbGlkYXRvciA9IGF3YWl0IFByaXZhdGVSYW5nZVZhbGlkYXRvci5uZXcoKTtcbiAgICBhd2FpdCBhY2Uuc2V0UHJvb2YoUFJJVkFURV9SQU5HRV9QUk9PRiwgcHJpdmF0ZVJhbmdlVmFsaWRhdG9yLmFkZHJlc3MpO1xuXG4gICAgcHJpdmF0ZVBheW1lbnRDb250cmFjdCA9IGF3YWl0IEJpZGRpbmcubmV3KGFjZS5hZGRyZXNzKTtcbiAgfSk7XG4gIGl0KCdDcmVhdGUgYSBmYWtlIHB1YmxpYyBiaWQgbm90ZSBhbmQgdGhlbiB1c2UgcHJpdmF0ZSByYW5nZSB0byBjb21wYXJlJywgYXN5bmMoKSA9PiB7XG5cbiAgICBjb25zb2xlLmxvZygnQ3JlYXRlIHB1YmxpYyByYW5nZSBub3RlJyk7XG4gICAgY29uc29sZS5sb2coXCJDYW4ndCBzdG9yZSBub3RlIHNvIHN0b3JlIGluZm8gZm9yIG5vdGVcIik7XG5cbiAgICBjb25zdCBtaW5BbW91bnQgPSAxMDA7XG4gICAgY29uc29sZS5sb2coJ1NldCBub3RlIHRvIHRvcEJpZCcpO1xuICAgIGF3YWl0IHByaXZhdGVQYXltZW50Q29udHJhY3Quc2V0VG9wQmlkTm90ZShib2IucHVibGljS2V5LCBtaW5BbW91bnQpO1xuXG4gICAgLy9hd2FpdCBwcml2YXRlUGF5bWVudENvbnRyYWN0LnNldFRvcEJpZChtaW5BbW91bnQsIG5ld0JpZE5vdGUpO1xuXG4gICAgY29uc3QgdG9wQmlkTm90ZSA9IGF3YWl0IHByaXZhdGVQYXltZW50Q29udHJhY3QuVG9wQmlkTm90ZSgpO1xuICAgIGNvbnNvbGUubG9nKCdDcmVhdGUgdGhlIGNvbXBhcmlzb24gbm90ZSBmcm9tIHRvcEJpZCcpO1xuICAgIGNvbnN0IGNvbXBhcmlzb25Ob3RlICA9IGF3YWl0IGF6dGVjLm5vdGUuY3JlYXRlKHRvcEJpZE5vdGUudXNlciwgdG9wQmlkTm90ZS5iaWRBbW91bnQpO1xuXG5cbiAgICBjb25zb2xlLmxvZygnU2V0IGFsbCBpbmZvcm1hdGlvbiBmb3IgbmV3IHByaXZhdGUgcmFuZ2UgcHJvb2YnKTtcblxuICAgIGNvbnN0IG5ld0Ftb3VudCA9IDE1MDtcbiAgICBjb25zdCBwcml2YXRlQmlkTm90ZSA9IGF3YWl0IGF6dGVjLm5vdGUuY3JlYXRlKHNhbGx5LnB1YmxpY0tleSwgbmV3QW1vdW50KTtcbiAgICBjb25zdCB1dGlsaXR5Tm90ZSA9IGF3YWl0IGF6dGVjLm5vdGUuY3JlYXRlKHNhbGx5LnB1YmxpY0tleSwgbmV3QW1vdW50IC0gdG9wQmlkTm90ZS5iaWRBbW91bnQpO1xuICAgIGNvbnN0IGlzR3JlYXRlck9yRXF1YWwgPSB0cnVlO1xuXG4gICAgY29uc29sZS5sb2coJ0NyZWF0ZSBwcml2YXRlIHJhbmdlIGNvbXBhcmlzb24nKTtcblxuICAgIGNvbnN0IHByaXZhdGVSYW5nZVByb29mID0gbmV3IFByaXZhdGVSYW5nZVByb29mKFxuICAgICAgICBwcml2YXRlQmlkTm90ZSxcbiAgICAgICAgY29tcGFyaXNvbk5vdGUsXG4gICAgICAgIHV0aWxpdHlOb3RlLFxuICAgICAgICBhY2NvdW50c1sxXSxcbiAgICAgICAgaXNHcmVhdGVyT3JFcXVhbCxcbiAgICApO1xuXG5cblxuICAgIGNvbnNvbGUubG9nKHByaXZhdGVSYW5nZVByb29mKTtcblxuICAgIC8vY29uc3QgcHJEYXRhID0gcHVibGljUmFuZ2VQcm9vZi5lbmNvZGVBQkkocHJpdmF0ZVBheW1lbnRDb250cmFjdC5hZGRyZXNzKTtcbiAgICAvL2F3YWl0IHByaXZhdGVQYXltZW50Q29udHJhY3Quc3VibWl0UHJvb2YoUFVCTElDX1JBTkdFX1BST09GLCBhY2NvdW50c1swXSwgcHJEYXRhKTtcbiAgICBjb25zb2xlLmxvZygnZW5jb2RlIHByaXZhdGUgcmFuZ2UgcHJvb2YnKTtcblxuICAgIGNvbnN0IHByRGF0YSA9IHByaXZhdGVSYW5nZVByb29mLmVuY29kZUFCSShwcml2YXRlUGF5bWVudENvbnRyYWN0LmFkZHJlc3MpO1xuICAgIGF3YWl0IHByaXZhdGVQYXltZW50Q29udHJhY3Quc3VibWl0UHJvb2YoUFJJVkFURV9SQU5HRV9QUk9PRiwgYWNjb3VudHNbMV0sIHByRGF0YSk7XG4gICAgY29uc29sZS5sb2coXCJyZWFjaGVkIGhlcmVcIik7XG4gIH0pXG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "lottery_private.js"
      ],
      "names": [
        "aztec",
        "require",
        "dotenv",
        "config",
        "secp256k1",
        "Bidding",
        "artifacts",
        "ACE",
        "PublicRangeValidator",
        "PrivateRangeValidator",
        "utils",
        "proofs",
        "PUBLIC_RANGE_PROOF",
        "PRIVATE_RANGE_PROOF",
        "constants",
        "JoinSplitProof",
        "MintProof",
        "PublicRangeProof",
        "PrivateRangeProof",
        "contract",
        "accounts",
        "bob",
        "accountFromPrivateKey",
        "process",
        "env",
        "GANACHE_TESTING_ACCOUNT_0",
        "sally",
        "GANACHE_TESTING_ACCOUNT_1",
        "privatePaymentContract",
        "before",
        "ace",
        "setCommonReferenceString",
        "CRS",
        "publicRangeValidator",
        "setProof",
        "address",
        "privateRangeValidator",
        "it",
        "console",
        "log",
        "minAmount",
        "setTopBidNote",
        "publicKey",
        "TopBidNote",
        "topBidNote",
        "note",
        "create",
        "user",
        "bidAmount",
        "comparisonNote",
        "newAmount",
        "privateBidNote",
        "utilityNote",
        "isGreaterOrEqual",
        "privateRangeProof",
        "prData",
        "encodeABI",
        "submitProof"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/e653788/aztec-ganache-starter-kit/test",
      "sourcesContent": [
        "import utils from '@aztec/dev-utils';\n\nconst aztec = require('aztec.js');\nconst dotenv = require('dotenv');\ndotenv.config();\nconst secp256k1 = require('@aztec/secp256k1');\n\nconst Bidding = artifacts.require('Bidding');\nconst ACE = artifacts.require('ACE');\nconst PublicRangeValidator = artifacts.require('PublicRange');\nconst PrivateRangeValidator = artifacts.require('PrivateRange');\n\nconst {\n  proofs: {\n    PUBLIC_RANGE_PROOF,\n    PRIVATE_RANGE_PROOF,\n  },\n  constants,\n} = utils;\n\n\n\nconst { JoinSplitProof, MintProof, PublicRangeProof, PrivateRangeProof} = aztec;\n\ncontract('Private payment', accounts => {\n\n  const bob = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_0);\n  const sally = secp256k1.accountFromPrivateKey(process.env.GANACHE_TESTING_ACCOUNT_1);\n  let privatePaymentContract;\n\n // beforeEach(async () => {\n //   privatePaymentContract = await ZkAssetMintable.deployed();\n // });\n  before(async () => {\n    const ace = await ACE.new();\n    await ace.setCommonReferenceString(constants.CRS);\n\n    const publicRangeValidator = await PublicRangeValidator.new();\n    await ace.setProof(PUBLIC_RANGE_PROOF, publicRangeValidator.address);\n\n    const privateRangeValidator = await PrivateRangeValidator.new();\n    await ace.setProof(PRIVATE_RANGE_PROOF, privateRangeValidator.address);\n\n    privatePaymentContract = await Bidding.new(ace.address);\n  });\n  it('Create a fake public bid note and then use private range to compare', async() => {\n\n    console.log('Create public range note');\n    console.log(\"Can't store note so store info for note\");\n\n    const minAmount = 100;\n    console.log('Set note to topBid');\n    await privatePaymentContract.setTopBidNote(bob.publicKey, minAmount);\n\n    //await privatePaymentContract.setTopBid(minAmount, newBidNote);\n\n    const topBidNote = await privatePaymentContract.TopBidNote();\n    console.log('Create the comparison note from topBid');\n    const comparisonNote  = await aztec.note.create(topBidNote.user, topBidNote.bidAmount);\n\n\n    console.log('Set all information for new private range proof');\n\n    const newAmount = 150;\n    const privateBidNote = await aztec.note.create(sally.publicKey, newAmount);\n    const utilityNote = await aztec.note.create(sally.publicKey, newAmount - topBidNote.bidAmount);\n    const isGreaterOrEqual = true;\n\n    console.log('Create private range comparison');\n\n    const privateRangeProof = new PrivateRangeProof(\n        privateBidNote,\n        comparisonNote,\n        utilityNote,\n        accounts[1],\n        isGreaterOrEqual,\n    );\n\n\n\n    console.log(privateRangeProof);\n\n    //const prData = publicRangeProof.encodeABI(privatePaymentContract.address);\n    //await privatePaymentContract.submitProof(PUBLIC_RANGE_PROOF, accounts[0], prData);\n    console.log('encode private range proof');\n\n    const prData = privateRangeProof.encodeABI(privatePaymentContract.address);\n    await privatePaymentContract.submitProof(PRIVATE_RANGE_PROOF, accounts[1], prData);\n    console.log(\"reached here\");\n  })\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567949155963
  }
}